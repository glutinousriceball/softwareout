<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--配置注解的映射和适配器:
        mvc:annotation-driven: 除了配置注解的映射和适配器，还加了
        其它的功能：比如数据转化成json返回给客户端
        默认的注解映射的支持 ,
        它会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter
    -->
    <mvc:annotation-driven/>

    <!--配置controller包扫描路径-->
    <context:component-scan base-package="com.wjm.softwareout.system.controller"/>
    <context:component-scan base-package="com.wjm.softwareout.system.config"/>

    <!--配置静态资源，允许静态资源直接请求-->
    <mvc:default-servlet-handler/>

    <!--配置静态资源路径-->
    <!--<mvc:resources mapping="/js/**" location="/resources/js/"/>-->
    <!--<mvc:resources mapping="/css/**" location="/resources/css/"/>-->
    <!--<mvc:resources mapping="/images/**" location="/resources/images/"/>-->
    <!--<mvc:resources mapping="/json/**" location="/resources/json/"/>-->
    <!--<mvc:resources mapping="/layui/**" location="/resources/layui/"/>-->
    <!--<mvc:resources mapping="/page/**" location="/resources/page/"/>-->
    <!--<mvc:resources mapping="/plugin/**" location="/resources/plugin/"/>-->
    <!--<mvc:resources mapping="/zTree/**" location="/resources/zTree/"/>-->

    <!--swagger2 配置静态资源-->
    <!--<mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/" />-->
    <!--<mvc:resources mapping="/webjars/**"-->
    <!--location="classpath:/META-INF/resources/webjars/" />-->

    <!--spring context holder-->
    <bean id="applicationContextHelper" class="com.wjm.softwareout.system.common.ApplicationContextHelper"/>
    <!--全局异常-->
    <bean class="com.wjm.softwareout.system.common.EasyBmsExceptionHandler"/>
    <!--这个resolver配置了，会找到相应的bean做为view，这里作为全局异常中配置json响应的jsonView-->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>

    <!--json解析-->
    <bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>

    <!--视图解析器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--前缀-->
        <property name="prefix" value="/WEB-INF/views/"/>
        <!--后缀-->
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--文件上传的配置-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--指定文件上传过程中提交的数据库的编码-->
        <property name="defaultEncoding" value="utf-8"/>
        <!--配置上传文件的最大值，单位KB,这里设置50MB-->
        <property name="maxUploadSize" value="52428800"/>
        <!-- 设置在文件上传时允许写到内存中的最大值，上传文件大小若小于此参数，则不会生成临时文件 -->
        <property name="maxInMemorySize" value="2048"/>
    </bean>

    <!--配置扫描properties文件-->
    <context:property-placeholder location="classpath:resource.properties" />
</beans>