<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!--配置凭证管理器-->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <!--加密算法-->
        <property name="hashAlgorithmName" value="md5"/>
        <!--散列次数-->
        <property name="hashIterations" value="2"/>
    </bean>

    <!--扫描UserRealm-->
    <context:component-scan base-package="com.wjm.softwareout.system.realm"/>

    <!--创建UserRealm对象-->
    <bean id="userRealm" class="com.wjm.softwareout.system.realm.UserRealm">
        <!--注入凭证管理器-->
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>

    <!--securityManager安全管理器-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--注入userRealm-->
        <property name="realm" ref="userRealm"/>
        <!--注入session管理器 sessionManager-->
        <property name="sessionManager" ref="sessionManager"/>
        <!--注入缓存管理器 cacheManager-->
        <property name="cacheManager" ref="customShiroCacheManager"/>
    </bean>

    <!--session 管理-->
    <!-- Session Manager -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 相隔多久检查一次session的有效性   -->
        <property name="sessionValidationInterval" value="3600000"/>
        <!-- session 有效时间为半小时 （毫秒单位）-->
        <property name="globalSessionTimeout" value="3600000"/>
        <!--注入sessionDao-->
        <property name="sessionDAO" ref="customShiroSessionDao"/>
        <!--session 监听，可以监听多个-->
        <property name="sessionListeners">
            <list>
                <ref bean="customSessionListener"/>
            </list>
        </property>
        <!-- 间隔多少时间检查，不配置是60分钟 -->
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <!-- 是否开启 检测，默认开启 -->
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <!-- 是否删除无效的，默认也是开启 -->
        <property name="deleteInvalidSessions" value="true"/>
        <!-- 会话Cookie模板 -->
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>

    <!--会话SessionID生成-->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!--cookie的name，我故意取名叫xxxxbaidu -->
        <constructor-arg value="v_v-s-baidu"/>
        <property name="httpOnly" value="true"/>
        <!--cookie的有效时间 -->
        <property name="maxAge" value="-1"/>
        <!-- 配置存储Session Cookie的domain为 一级域名
        <property name="domain" value=".itboy.net"/>
         -->
    </bean>

    <!-- session 创建、删除、查询 -->
    <bean id="jedisShiroSessionRepository" class="com.wjm.softwareout.system.shiro.cache.JedisShiroSessionRepository">
        <property name="jedisManager" ref="jedisManager"/>
    </bean>

    <!-- custom shiro session listener -->
    <bean id="customSessionListener" class="com.wjm.softwareout.system.shiro.listener.CustomSessionListener">
        <property name="shiroSessionRepository" ref="jedisShiroSessionRepository"/>
    </bean>
    <bean id="customShiroSessionDao" class="com.wjm.softwareout.system.shiro.CustomShiroSessionDao">
        <property name="shiroSessionRepository" ref="jedisShiroSessionRepository"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <!-- 手动操作Session，管理Session -->
    <bean id="customSessionManager" class="com.wjm.softwareout.system.shiro.session.CustomSessionManager">
        <property name="shiroSessionRepository" ref="jedisShiroSessionRepository"/>
        <property name="customShiroSessionDao" ref="customShiroSessionDao"/>
    </bean>

    <!-- 会话验证调度器,配置多长时间检测 -->
    <bean id="sessionValidationScheduler"
          class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
        <!-- 间隔多少时间检查，不配置是60分钟 -->
        <property name="interval" value="${session.validate.timespan}"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!-- 用户缓存 -->
    <bean id="customShiroCacheManager" class="com.wjm.softwareout.system.shiro.cache.impl.CustomShiroCacheManager">
        <property name="shiroCacheManager" ref="jedisShiroCacheManager"/>
    </bean>

    <!-- shiro 缓存实现，对 ShiroCacheManager，采用redis的实现 -->
    <bean id="jedisShiroCacheManager" class="com.wjm.softwareout.system.shiro.cache.impl.JedisShiroCacheManager">
        <property name="jedisManager" ref="jedisManager"/>
    </bean>

    <!-- redis 的缓存 -->
    <bean id="jedisManager" class="com.wjm.softwareout.system.shiro.cache.JedisManager">
        <property name="jedisPool" ref="jedisPool"/>
    </bean>

    <!-- 静态注入，相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>


    <!--shiroFilter-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!--Shiro的核心安全接口，这个属性是必须的-->
        <property name="securityManager" ref="securityManager"/>
        <!-- 要求登录时的链接(登录页面地址)，非必须的属性，默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
        <property name="loginUrl" value="/index.jsp"/>
        <!-- 登录成功后要跳转的连接(本例中此属性用不到，因为登录成功后的处理逻辑在UserController里硬编码) -->
        <!-- <property name="successUrl" value="/success.jsp"/> -->
        <!-- 用户访问未对其授权的资源时，所显示的连接 -->
        <!-- 	<property name="unauthorizedUrl" value="/refuse.jsp" /> -->

        <!-- 过虑器链定义，从上向下顺序执行，一般将/**放在最下边 -->
        <property name="filterChainDefinitions">
            <value>
                <!-- anon 不需要认证通过就可以匿名访问 -->
                /resources/**=anon
                /test/**=anon
                <!--/druid/**=anon --> <!--放行druid监控页面接口-->
                <!--/swagger-ui.html=anon--> <!--放行swagger开始-->
                /v2/**=anon
                /swagger-resources/**=anon
                /webjars/**=anon   <!--放行swagger结束-->
                /index.jsp*=anon
                /login/toLogin*=anon
                /login/login*=anon
                <!-- 如果用户访问user/logout就使用Shiro注销session -->
                /user/logout.page = logout
                <!-- /** = anon所有url都不可以匿名访问 -->
                <!-- /** = authc所有url都不可以匿名访问 必须放到最后面 -->
                /** = authc
            </value>
        </property>
    </bean>
    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
</beans>